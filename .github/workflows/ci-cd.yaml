name: DevSecOps Security Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  bandit:
    name: 🐍 Bandit (SAST for Python)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Bandit
        run: bandit -r upload_server -f html -o bandit-report.html
      - uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.html

  codeql:
    name: 🔎 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  sonarqube:
    name: 📊 SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          docker run --rm -e SONAR_HOST_URL="http://your-sonarqube-server" \
            -e SONAR_LOGIN="$SONAR_TOKEN" \
            -v "$PWD:/usr/src" sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=secure-upload-server \
            -Dsonar.sources=upload_server

  zap:
    name: 🛡️ OWASP ZAP DAST
    runs-on: ubuntu-latest
    steps:
      - name: Run ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://your-app-url'
      - uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: report_html.html

  nikto:
    name: 🕵️ Nikto Scan
    runs-on: ubuntu-latest
    steps:
      - name: Run Nikto
        run: docker run --rm sullo/nikto -h http://your-app-url > nikto-report.txt
      - uses: actions/upload-artifact@v3
        with:
          name: nikto-report
          path: nikto-report.txt

  wapiti:
    name: 🌐 Wapiti Scan
    runs-on: ubuntu-latest
    steps:
      - name: Install and Run Wapiti
        run: |
          pip install wapiti3
          wapiti -u http://your-app-url -f html -o wapiti-report.html
      - uses: actions/upload-artifact@v3
        with:
          name: wapiti-report
          path: wapiti-report.html

  arachni:
    name: 🕸️ Arachni Scan
    runs-on: ubuntu-latest
    steps:
      - name: Run Arachni
        run: |
          docker run --rm -v $PWD:/arachni/reports arachni/arachni \
          http://your-app-url --report-save-path=/arachni/reports/scan.afr
      - uses: actions/upload-artifact@v3
        with:
          name: arachni-scan-afr
          path: scan.afr
